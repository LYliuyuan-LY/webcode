<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/webcode/2024/07/24/hello-world/"/>
    <url>/webcode/2024/07/24/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>使用 GitHub Action 自动推送博客更新到 Telegram 频道</title>
    <link href="/webcode/2024/01/09/%E4%BD%BF%E7%94%A8-GitHub-Action-%E8%87%AA%E5%8A%A8%E6%8E%A8%E9%80%81%E5%8D%9A%E5%AE%A2%E6%9B%B4%E6%96%B0%E5%88%B0-Telegram-%E9%A2%91%E9%81%93/"/>
    <url>/webcode/2024/01/09/%E4%BD%BF%E7%94%A8-GitHub-Action-%E8%87%AA%E5%8A%A8%E6%8E%A8%E9%80%81%E5%8D%9A%E5%AE%A2%E6%9B%B4%E6%96%B0%E5%88%B0-Telegram-%E9%A2%91%E9%81%93/</url>
    
    <content type="html"><![CDATA[<h1 id="使用-GitHub-Action-自动推送博客更新到-Telegram-频道"><a href="#使用-GitHub-Action-自动推送博客更新到-Telegram-频道" class="headerlink" title="使用 GitHub Action 自动推送博客更新到 Telegram 频道"></a>使用 GitHub Action 自动推送博客更新到 Telegram 频道</h1><p>之前在别人的频道看到了将自己博客更新的消息推送到自己频道的 Bot, 觉得很不错, 所以 — 咱也要整一个!</p><p>折腾了一小段时间之后, 就有了这篇文章, 以及一个推送的 Bot.</p><h2 id="整体流程"><a href="#整体流程" class="headerlink" title="整体流程"></a>整体流程</h2><p>这个事情说起来也不麻烦, 博客本身就是使用 Hexo 通过 GitHub Action, 在每次 push 时自动构建和发布的. 所以我们要做的事情就是, 在 Action 流程中加一个步骤, 获取这次提交包含的 Markdown 文件, 然后通过 Telegram Bot API 发送到自己的频道:</p><ol><li>获取当前的 Commit Message, 判断是否包含 <code>upd post</code> 或 <code>new post</code></li><li>如果包含, 则通过 <code>gitpython</code> 库获得当前提交包含的 Markdown 文件, 再通过 head matter 的第二行拿到名称, 第三行拿到摘要</li><li>拼一下消息字符串, 通过 <code>telegram</code> 库, 用机器人账号把消息发到指定的位置<ol><li>Bot 通过 BotFather 创建, <strong>记得手动加到频道里并给对应的发送消息的权限</strong></li><li>Bot 的 Token 和目标频道的 ID 放到 Secret 里面, 通过环境变量在执行时获取<ol><li>虽然 Action 会试着给你包含这些内容的输出 (如果真有的话) 打码, 但你要是直接写在源码里仓库还是 public 的话谁也救不了</li></ol></li></ol></li></ol><p>整体的流程就是这样, 并不算难, 麻烦的地方在于获取具体哪篇是更新的文章 — Hexo 本身似乎没有提供 API, GPT 给出的脚本也跑不了, 大概是瞎编的. 而折腾这么久的原因主要是两个</p><ol><li>没整明白如何在 Action 的不同步骤之间传递消息, 不管是 <code>echo ::setoutput</code> 还是写到环境文件都没效果</li><li><code>telegram</code> 库中发送消息的方法是 <code>async</code> 的, 而某个笨蛋很长时间没写过这类代码也没看文档</li></ol><h2 id="待改进之处"><a href="#待改进之处" class="headerlink" title="待改进之处"></a>待改进之处</h2><p>还是有很多要改进的地方的:</p><ol><li>更新信息里面附带摘要 (是的上面写了但是我没真正加进去)</li><li>把上面的第一步和第二步都放到 py 脚本里面去, 由于历史遗留问题这两步现在是分开的</li></ol><p>等我有时间再改改吧, 最近还是比较忙</p><p>就这样, 博客的 Action 配置文件在<a href="https://github.com/HorizonChaser/horizonchaser.github.io/blob/backup/.github/workflows/main.yml">这里</a>, 需要的话可以看看.</p>]]></content>
    
    
    
    <tags>
      
      <tag>GitHub</tag>
      
      <tag>CI/CD</tag>
      
      <tag>Telegram Bot</tag>
      
      <tag>GitHub Action</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
